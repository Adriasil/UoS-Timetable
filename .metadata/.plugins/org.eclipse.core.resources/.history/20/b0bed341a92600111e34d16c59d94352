/**
 * Carpet.java
 */

package org.com1027.cw3.sl00225;

/**
 * @author stephenlarkin_me
 */
public class Carpet implements IRoomFeature {

  private double width     = 0;
  private double length    = 0;
  private String pattern   = null;
  private int    gapLength = 0;

  public Carpet(double width, double length, int gapLength, String pattern) throws IllegalArgumentException {
    if (width <= 0 || length <= 0) {
      throw new IllegalArgumentException("The width or height of the window is invalid. The height and width must be over 0.");
    }
    this.length = length;
    this.width = width;
    this.gapLength = gapLength;
    this.pattern = pattern;
  }

  /**
   * @return
   * 
   * @see org.com1027.cw3.sl00225.IRoomFeature#getArea()
   */
  @Override
  public double getArea() {
    return (this.width * this.length);
  }

  public int getGapLength() {
    return this.gapLength;
  }

  public double getLength() {
    return this.length;
  }

  public String getPattern() {
    return this.pattern;
  }

  public int getPatternLength() {
    return this.pattern.length();
  }

  @Override
  public double getWidth() {
    return this.width;
  }

  @Override
  public boolean isCarpet() {
    return true;
  }

  public String printCarpet() {
    StringBuffer gap = new StringBuffer("");
    for (int i = 0; i < this.gapLength; i++) {
      gap.append(".");
    }
    String patternSection = (this.pattern + gap);
    StringBuffer carpetLine = new StringBuffer("");
    while (carpetLine.length() < this.width) {
      carpetLine.append(patternSection);
    }
    while (carpetLine.length() > this.width) {
      carpetLine.deleteCharAt(carpetLine.length() - 1);
    }
    StringBuffer fullPattern = new StringBuffer("");
    for (int i = 0; i < this.length; i++) {
      if (i + 1 == this.length) {
        fullPattern.append(carpetLine);
      }
      else {
        fullPattern.append(carpetLine + "\n");
      }
    }
    return (fullPattern + "");
  }

}
